/*
 * Copyright (c) 2014-2017, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

#include <dt-bindings/clock/tegra194-clock.h>
#include <dt-bindings/reset/tegra194-reset.h>
#include "dt-bindings/display/tegra-dc.h"
#include "dt-bindings/interrupt/tegra186-irq.h"
#include "dt-bindings/interrupt-controller/arm-gic.h"
#include "dt-bindings/soc/tegra186-powergate.h"
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/tegra194-gpio.h>
#include <dt-bindings/memory/tegra-swgroup.h>
#include <dt-bindings/memory/tegra194-swgroup.h>
#include "tegra194-trusty.dtsi"
#include "tegra194-soc-uart.dtsi"
#include "tegra194-soc-ufshc.dtsi"

/ {
	compatible = "nvidia,tegra186";
	interrupt-parent = <&intc>;
	#address-cells = <2>;
	#size-cells = <2>;

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		generic_reserved: generic_carveout {
			compatible = "nvidia,generic_carveout";
			size = <0 0>;
			alignment = <0 0x100000>;
			alloc-ranges = <0 0 0x1 0>;
			no-map;
			status = "disabled";
		};

		gos_reserved: grid-of-semaphores {
			compatible = "nvidia,gosmem";
			no-map;
			status = "okay";
			cvdevs = <&nvdla0 &nvdla1 &pva0 &pva1>;
		};

	};

	tegra-carveouts {
		compatible = "nvidia,carveouts";
		memory-region = <&generic_reserved &gos_reserved>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupts = <1 11 0xf01
			      1 14 0xf01
			      1 11 0xf01
			      1 10 0xf01>;
		status = "disabled";
	};

	bpmp_clks: clock@0 {
		compatible = "nvidia,tegra-fake-clks";
		reg = <0x0 0x0 0x0 0x0>;
		#clock-cells = <1>;
		status = "okay";
	};

	bpmp_resets: bpmp_reset@0 {
		compatible = "nvidia,bpmp-resets";
		reg = <0x0 0x0 0x0 0x0>;
		#reset-cells = <1>;
	};

	rtc@c2a0000 {
		compatible = "nvidia,tegra18-rtc";
		reg = <0x0 0x0c2a0000 0x0 0x00010000>;
		interrupts = <0 10 0x04>;
		status = "disabled";
	};

	mc_sid@2c00000 {
		compatible = "nvidia,tegra194-mc-sid";
 		reg = <0x0 0x02c00000 0x0 0x00010000>, /* MC_SID_BASE */
 		      <0x0 0x02c10000 0x0 0x00010000>; /* MC_BASE */
		status = "disabled";
	};

	/* HACK: Populate earlier than other device */
	smmu: iommu@12000000{
		compatible = "t19x,arm,mmu-500";
		reg = <0x0 0x11000000 0x0 0x01000000>, /* SMMU1 16MB */
		      <0x0 0x12000000 0x0 0x01000000>; /* SMMU0 16MB */

		#global-interrupts = <4>;
		interrupts = <0 170 4>,
			     <0 171 4>,
			     <0 232 4>,
			     <0 233 4>;

		status = "disabled";

		mmu-masters = <&host1x				TEGRA_SID_HC
								TEGRA_SID_HC_VM0
								TEGRA_SID_HC_VM1
								TEGRA_SID_HC_VM2
								TEGRA_SID_HC_VM3
								TEGRA_SID_HC_VM4
								TEGRA_SID_HC_VM5
								TEGRA_SID_HC_VM6
								TEGRA_SID_HC_VM7>,
			      <&{/host1x/vi-thi@15f00000}	TEGRA_SID_VI>,
			      <&{/host1x/vic@15340000}		TEGRA_SID_VIC>,
			      <&{/host1x/nvdec@15480000}	TEGRA_SID_NVDEC>,
			      <&{/host1x/nvenc@154c0000}	TEGRA_SID_NVENC>,
			      <&{/host1x/nvjpg@15380000}	TEGRA_SID_NVJPG>,
			      <&{/host1x/nvdla0@15880000}	TEGRA_SID_NVDLA0>,
			      <&{/host1x/nvdla1@158c0000}	TEGRA_SID_NVDLA1>,
			      <&{/host1x/nvdisplay@15200000}	TEGRA_SID_NVDISPLAY>,
			      <&{/host1x/nvdisplay@15210000}	TEGRA_SID_NVDISPLAY>,
			      <&{/host1x/nvenc1@15a80000}	TEGRA_SID_NVENC1>,
			      <&{/host1x/pva0}			TEGRA_SID_PVA0>,
			      <&{/host1x/pva1}			TEGRA_SID_PVA1>,
			      <&{/host1x/nvdec1@15140000}	TEGRA_SID_NVDEC1>;

		domains {
			host1x_domain {
				address-space = <&host1x_as>;
				sid-list = <TEGRA_SID(HC)>;
				sid-list-len = <1>;
			};
			host1x_client_domain {
				address-space = <&host1x_client_as>;
				sid-list = <TEGRA_SID(VIC)
					    TEGRA_SID(NVDEC)
					    TEGRA_SID(NVENC)
					    TEGRA_SID(NVJPG)
					    TEGRA_SID(VI)
					    TEGRA_SID(NVDLA0)
					    TEGRA_SID(NVDLA1)
					    TEGRA_SID(NVDISPLAY)
					    TEGRA_SID(NVENC1)
					    TEGRA_SID(PVA0)
					    TEGRA_SID(PVA1)
					    TEGRA_SID(NVDEC1)>;
				sid-list-len = <12>;
			};
		};

		address-space-prop {
			host1x_as: host1x {
				iova-start = <0x0 0x1000>;
				iova-size = <0x0 0xFFFFEFFF>;
				alignment = <0xFFFFF>;
				num-pf-page = <0>;
				gap-page = <1>;
			};
			host1x_client_as: host1x_client {
				iova-start = <0x0 0x1000>;
				iova-size = <0x0 0xFFFFEFFF>;
				alignment = <0xFFFFF>;
				num-pf-page = <0>;
				gap-page = <1>;
			};
			common_as: common {
				iova-start = <0x0 0x80000000>;
				iova-size = <0x0 0x7FF00000>;
				alignment = <0xFFFFF>;
				num-pf-page = <0>;
				gap-page = <1>;
			};
			ape_as: ape {
				iova-start = <0x0 0x40000000>;
				iova-size = <0x0 0x20000000>;
				alignment = <0xFFFFF>;
				num-pf-page = <0>;
				gap-page = <1>;
			};
		};
	};


	intc: interrupt-controller@3881000 {
		compatible = "arm,cortex-a15-gic";
		#interrupt-cells = <3>;
		interrupt-controller;
		reg = <0x0 0x03881000 0x0 0x00001000
		       0x0 0x03882000 0x0 0x00002000>;
		status = "disabled";
	};

	chipid@100000 {
		compatible = "nvidia,tegra186-chipid";
		reg = <0x0 0x00100000 0x0 0x10000>;
		status = "disabled";
	};

	miscreg@00100000 {
		compatible = "nvidia,tegra186-miscreg";
		reg = <0x0 0x00100000 0x0 0xf000>, /* Chipid */
		    <0x0 0x0010f000 0x0 0x1000>; /* Straps */
		status = "disabled";
	};

	hsp_top: tegra-hsp@3c00000 {
		compatible = "nvidia,tegra186-hsp";
		reg = <0x0 0x03c00000 0x0 0x000a0000>;
		interrupts =	<0 176 0x4>,
				<0 120 0x4>,
				<0 121 0x4>,
				<0 122 0x4>,
				<0 123 0x4>,
				<0 124 0x4>,
				<0 125 0x4>,
				<0 126 0x4>,
				<0 127 0x4>;
		interrupt-names = "doorbell",
				"shared0", "shared1", "shared2", "shared3",
				"shared4", "shared5", "shared6", "shared7";
		status = "okay";
	};

	efuse@3820000 {
		compatible = "nvidia,tegra186-efuse";
		reg = <0x0 0x03820000 0x0 0x600>;
		clocks = <&bpmp_clks TEGRA194_CLK_FUSE>,
		         <&bpmp_clks TEGRA194_CLK_CLK_M>;
		clock-names = "fuse", "clk_m";
		status = "okay";
	};

	bpmp {
		compatible = "nvidia,tegra186-bpmp";
		#stream-id-cells = <1>;
		reg = <0x0 0x0d000000 0x0 0x00800000>,
		      <0x0 0x4004e000 0x0 0x00001000>,
		      <0x0 0x4004f000 0x0 0x00001000>;
		status = "okay";
	};

	se: se_elp@3ad0000 {
		compatible = "nvidia,tegra186-se-elp";
		reg = <0x0 0x03ad0000 0x0 0x10000>,
		      <0x0 0x03ae0000 0x0 0x10000>;
		clocks = <&bpmp_clks TEGRA194_CLK_SE>;
		clock-names = "se";
		status = "okay";
	};

	host1x: host1x {
		compatible = "nvidia,tegra194-host1x", "simple-bus";
		reg = <0x0 0x13e10000 0x0 0x00010000
		       0x0 0x13e00000 0x0 0x00010000
		       0x0 0x13ec0000 0x0 0x00040000
		       0x0 0x60000000 0x0 0x00400000>;
		interrupts = <0 265 0x04>,
			     <0 263 0x04>;
		nvidia,ignore-dt-update;
		wakeup_capable;
		resets = <&bpmp_resets TEGRA194_RESET_HOST1X>;
		clocks = <&bpmp_clks TEGRA194_CLK_HOST1X>,
			 <&bpmp_clks TEGRA194_CLK_ACTMON>;
		nvidia,vmid = <1>;

		#stream-id-cells = <9>;
		#address-cells = <2>;
		#size-cells = <2>;

		ranges;

		vic@15340000 {
			compatible = "nvidia,tegra194-vic";
			reg = <0x0 0x15340000 0x0 0x00040000>;
			resets = <&bpmp_resets TEGRA194_RESET_VIC>;
			clocks = <&bpmp_clks TEGRA194_CLK_VIC>;
			clock-names = "vic";

			#stream-id-cells = <1>;
		};

		nvjpg@15380000 {
			compatible = "nvidia,tegra194-nvjpg";
			reg = <0x0 0x15380000 0x0 0x00040000>;
			resets = <&bpmp_resets TEGRA194_RESET_NVJPG>;
			clocks = <&bpmp_clks TEGRA194_CLK_NVJPG>;
			clock-names = "nvjpg";

			#stream-id-cells = <1>;
		};

		nvdec@15480000 {
			compatible = "nvidia,tegra194-nvdec";
			reg = <0x0 0x15480000 0x0 0x00040000>;
			resets = <&bpmp_resets TEGRA194_RESET_NVDEC>;
			clocks = <&bpmp_clks TEGRA194_CLK_NVDEC>,
				 <&bpmp_clks TEGRA194_CLK_KFUSE>;
			clock-names = "nvdec", "kfuse";

			#stream-id-cells = <1>;
		};

		nvdec1@15140000 {
			compatible = "nvidia,tegra194-nvdec";
			reg = <0x0 0x15140000 0x0 0x00040000>;
			/* FIXME once correct defines exist */
			/* resets = <&bpmp_resets TEGRA194_RESET_NVDEC1>; */
			clocks = <&bpmp_clks TEGRA194_CLK_NVDEC>,
				 <&bpmp_clks TEGRA194_CLK_KFUSE>;
			clock-names = "nvdec", "kfuse";

			#stream-id-cells = <1>;
		};

		nvenc@154c0000 {
			compatible = "nvidia,tegra194-nvenc";
			reg = <0x0 0x154c0000 0x0 0x00040000>;
			resets = <&bpmp_resets TEGRA194_RESET_NVENC>;
			clocks = <&bpmp_clks TEGRA194_CLK_NVENC>;
			clock-names = "nvenc";

			#stream-id-cells = <1>;
		};

		nvenc1@15a80000 {
			compatible = "nvidia,tegra194-nvenc";
			reg = <0x0 0x15a80000 0x0 0x00040000>;
			/* FIXME once correct defines exist */
			/* resets = <&bpmp_resets TEGRA194_RESET_NVENC>; */
			clocks = <&bpmp_clks TEGRA194_CLK_NVENC>;
			clock-names = "nvenc";

			#stream-id-cells = <1>;
		};

		nvdla0: nvdla0@15880000 {
			compatible = "nvidia,tegra194-nvdla";
			reg = <0x0 0x15880000 0x0 0x00040000>;
			interrupts = <0 236 0x04>;

			resets = <&bpmp_resets TEGRA194_RESET_DLA0>;
			clocks = <&bpmp_clks TEGRA194_CLK_DLA0_CORE>,
				 <&bpmp_clks TEGRA194_CLK_DLA0_FALCON>;
			clock-names = "nvdla0", "nvdla0_flcn";

			#stream-id-cells = <1>;
		};

		nvdla1: nvdla1@158c0000 {
			compatible = "nvidia,tegra194-nvdla";
			reg = <0x0 0x158c0000 0x0 0x00040000>;
			interrupts = <0 237 0x04>;

			resets = <&bpmp_resets TEGRA194_RESET_DLA1>;
			clocks = <&bpmp_clks TEGRA194_CLK_DLA1_CORE>,
				 <&bpmp_clks TEGRA194_CLK_DLA1_FALCON>;
			clock-names = "nvdla1", "nvdla1_flcn";

			#stream-id-cells = <1>;
		};

		nvdisplay@15200000 {
			status = "disabled";
			compatible = "nvidia,tegra194-dc";
			reg = <0x0 0x15200000 0x0 0x10000>;
			interrupts = <0 153 4>;

			#stream-id-cells = <0x1>;

			clock-names = "clk32k_in", "nvdisplay_disp",
				      "nvdisplayhub", "nvdisplay_p0",
				      "pllp_display", "plld2", "plld3",
				      "pll_d", "emc", "emc_latency";
			clocks = <&clk32k_in>,
				 <&bpmp_clks TEGRA194_CLK_NVDISPLAY_DISP>,
				 <&bpmp_clks TEGRA194_CLK_NVDISPLAYHUB>,
				 <&bpmp_clks TEGRA194_CLK_NVDISPLAY_P0>,
				 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>,
				 <&bpmp_clks TEGRA194_CLK_PLLD2>,
				 <&bpmp_clks TEGRA194_CLK_PLLD3>,
				 <&bpmp_clks TEGRA194_CLK_PLLD>,
				 <&bpmp_clks TEGRA194_CLK_EMC>,
				 <&bpmp_clks TEGRA194_CLK_CLK_M>;
			reset-names = "misc", "wgrp0", "wgrp1", "wgrp2",
				      "wgrp3", "wgrp4", "wgrp5", "head0";
			resets = <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_MISC>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP0>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP1>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP2>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP3>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP4>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP5>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_HEAD0>;
		}; //nvdisplay@15200000

		nvdisplay@15210000 {
			status = "disabled";
			compatible = "nvidia,tegra194-dc";
			reg = <0x0 0x15210000 0x0 0x10000>;
			interrupts = <0 154 4>;

			#stream-id-cells = <0x1>;

			clock-names = "clk32k_in", "nvdisplay_disp",
				      "nvdisplayhub", "nvdisplay_p1",
				      "pllp_display", "plld2", "plld3",
				      "pll_d", "disp2_emc", "emc_latency";
			clocks = <&clk32k_in>,
				 <&bpmp_clks TEGRA194_CLK_NVDISPLAY_DISP>,
				 <&bpmp_clks TEGRA194_CLK_NVDISPLAYHUB>,
				 <&bpmp_clks TEGRA194_CLK_NVDISPLAY_P1>,
				 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>,
				 <&bpmp_clks TEGRA194_CLK_PLLD2>,
				 <&bpmp_clks TEGRA194_CLK_PLLD3>,
				 <&bpmp_clks TEGRA194_CLK_PLLD>,
				 <&bpmp_clks TEGRA194_CLK_EMC>,
				 <&bpmp_clks TEGRA194_CLK_CLK_M>;
			reset-names = "misc", "wgrp0", "wgrp1", "wgrp2",
				      "wgrp3", "wgrp4", "wgrp5", "head1";
			resets = <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_MISC>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP0>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP1>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP2>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP3>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP4>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_WGRP5>,
				 <&bpmp_resets TEGRA194_RESET_NVDISPLAY0_HEAD1>;
		}; //nvdisplay@15210000

		sor {
			status = "disabled";
			compatible = "nvidia,tegra194-sor";
			reg = <0x0 0x15B00000 0x0 0x40000>;

			nvidia,xbar-ctrl = <0x2 0x1 0x0 0x3 0x4>;

			clocks = <&clk32k_in>,
				 <&bpmp_clks TEGRA194_CLK_SOR0>,
				 <&bpmp_clks TEGRA194_CLK_SOR_SAFE>,
				 <&bpmp_clks TEGRA194_CLK_SOR0_PAD_CLKOUT>,
				 <&bpmp_clks TEGRA194_CLK_SOR0_OUT>,
				 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>,
				 <&bpmp_clks TEGRA194_CLK_MAUD>,
				 <&bpmp_clks TEGRA194_CLK_HDA>,
				 <&bpmp_clks TEGRA194_CLK_HDA2CODEC_2X>,
				 <&bpmp_clks TEGRA194_CLK_HDA2HDMICODEC>;
			clock-names = "clk32k_in", "sor0", "sor_safe",
				      "sor0_pad_clkout", "sor0_out",
				      "pllp_out0", "maud", "hda",
				      "hda2codec_2x", "hda2hdmi";
			resets = <&bpmp_resets TEGRA194_RESET_SOR0>,
				 <&bpmp_resets TEGRA194_RESET_HDA>,
				 <&bpmp_resets TEGRA194_RESET_HDA2CODEC_2X>,
				 <&bpmp_resets TEGRA194_RESET_HDA2HDMICODEC>;
			reset-names = "sor0","hda_rst", "hda2codec_2x_rst",
				"hda2hdmi_rst";
		}; //sor

		sor1 {
			status = "disabled";
			compatible = "nvidia,tegra194-sor1";
			reg = <0x0 0x15580000 0x0 0x40000>;

			nvidia,xbar-ctrl = <0x2 0x1 0x0 0x3 0x4>;

			clocks = <&clk32k_in>,
				 <&bpmp_clks TEGRA194_CLK_SOR1>,
				 <&bpmp_clks TEGRA194_CLK_SOR_SAFE>,
				 <&bpmp_clks TEGRA194_CLK_SOR1_PAD_CLKOUT>,
				 <&bpmp_clks TEGRA194_CLK_SOR1_OUT>,
				 <&bpmp_clks TEGRA194_CLK_PLLP_OUT0>,
				 <&bpmp_clks TEGRA194_CLK_MAUD>,
				 <&bpmp_clks TEGRA194_CLK_HDA>,
				 <&bpmp_clks TEGRA194_CLK_HDA2CODEC_2X>,
				 <&bpmp_clks TEGRA194_CLK_HDA2HDMICODEC>;
			clock-names = "clk32k_in", "sor1", "sor_safe",
				      "sor1_pad_clkout", "sor1_out",
				      "pllp_out0", "maud", "hda",
				      "hda2codec_2x", "hda2hdmi";
			resets = <&bpmp_resets TEGRA194_RESET_SOR1>,
				 <&bpmp_resets TEGRA194_RESET_HDA>,
				 <&bpmp_resets TEGRA194_RESET_HDA2CODEC_2X>,
				 <&bpmp_resets TEGRA194_RESET_HDA2HDMICODEC>;
			reset-names = "sor1","hda_rst", "hda2codec_2x_rst",
				"hda2hdmi_rst";
		}; //sor1

		dpaux@155c0000 {
			status = "disabled";
			compatible = "nvidia,tegra194-dpaux";
			reg = <0x0 0x155c0000 0x0 0x00010000>;
			interrupts = <0 159 4>;

			clocks = <&clk32k_in>,
				 <&bpmp_clks TEGRA194_CLK_DPAUX>,
				 <&bpmp_clks TEGRA194_CLK_PLLDP>;
			clock-names = "clk32k_in", "dpaux", "plldp";
			resets = <&bpmp_resets TEGRA194_RESET_DPAUX>;
			reset-names = "dpaux";
		}; //dpaux@155c0000

		dpaux@15040000 {
			status = "disabled";
			compatible = "nvidia,tegra194-dpaux1";
			reg = <0x0 0x15040000 0x0 0x00010000>;
			interrupts = <0 160 4>;

			clocks = <&clk32k_in>,
				 <&bpmp_clks TEGRA194_CLK_DPAUX1>,
				 <&bpmp_clks TEGRA194_CLK_PLLDP>;
			clock-names = "clk32k_in", "dpaux1", "plldp";
			resets = <&bpmp_resets TEGRA194_RESET_DPAUX1>;
			reset-names = "dpaux1";
		}; //dpaux@15040000

		vi-thi@15f00000 {
			compatible = "nvidia,tegra194-vi-thi";
                        reg = <0x0 0x15f00000 0x0 0x00100000>;

			resets = <&bpmp_resets TEGRA194_RESET_VI>,
				 <&bpmp_resets TEGRA194_RESET_TSCTNVI>;
			reset-names = "vi", "tsctnvi";
			clocks = <&bpmp_clks TEGRA194_CLK_VI>,
				 <&bpmp_clks TEGRA194_CLK_NVCSI>,
				 <&bpmp_clks TEGRA194_CLK_NVCSILP>;
			clock-names = "vi", "nvcsi", "nvcsilp";

			#stream-id-cells = <1>;
		};

		pva0: pva0 {
			compatible = "nvidia,tegra194-pva";
			reg = <0x0 0x16000000 0x0 0x800000>;
			interrupts = <0 234 0x04>;

			resets = <&bpmp_resets TEGRA194_RESET_PVA0_ALL>;
			clocks = <&bpmp_clks TEGRA194_CLK_PVA0_AXI>,
				 <&bpmp_clks TEGRA194_CLK_PVA0_VPS0>,
				 <&bpmp_clks TEGRA194_CLK_PVA0_VPS1>;
			clock-names = "axi", "vps0", "vps1";

			#stream-id-cells = <1>;
		};

		pva1: pva1 {
			compatible = "nvidia,tegra194-pva";
			reg = <0x0 0x16800000 0x0 0x800000>;
			interrupts = <0 235 0x04>;

			resets = <&bpmp_resets TEGRA194_RESET_PVA1_ALL>;
			clocks = <&bpmp_clks TEGRA194_CLK_PVA1_AXI>,
				 <&bpmp_clks TEGRA194_CLK_PVA1_VPS0>,
				 <&bpmp_clks TEGRA194_CLK_PVA1_VPS1>;
			clock-names = "axi", "vps0", "vps1";

			#stream-id-cells = <1>;
		};

		se@15810000 {
			compatible = "nvidia,tegra186-se1-nvhost";
			reg = <0x0 0x15810000 0x0 0x10000>;
			supported-algos = "drbg";
			opcode_addr = <0x204>;
			resets = <&bpmp_resets TEGRA194_RESET_SE>;
			clocks = <&bpmp_clks TEGRA194_CLK_SE>;
			clock-names = "se";
			#stream-id-cells = <1>;
			status = "okay";
		};

		se@15820000 {
			compatible = "nvidia,tegra186-se2-nvhost";
			reg = <0x0 0x15820000 0x0 0x10000>;
			supported-algos = "aes", "cmac";
			opcode_addr = <0x404>;
			resets = <&bpmp_resets TEGRA194_RESET_SE>;
			clocks = <&bpmp_clks TEGRA194_CLK_SE>;
			clock-names = "se";
			#stream-id-cells = <1>;
			status = "okay";
		};

		se@15830000 {
			compatible = "nvidia,tegra186-se3-nvhost";
			reg = <0x0 0x15830000 0x0 0x10000>;
			supported-algos = "rsa";
			opcode_addr = <0x604>;
			resets = <&bpmp_resets TEGRA194_RESET_SE>;
			clocks = <&bpmp_clks TEGRA194_CLK_SE>;
			clock-names = "se";
			#stream-id-cells = <1>;
			status = "okay";
		};

		se@15840000 {
			compatible = "nvidia,tegra186-se4-nvhost";
			reg = <0x0 0x15840000 0x0 0x10000>;
			supported-algos = "sha";
			opcode_addr = <0x104>;
			resets = <&bpmp_resets TEGRA194_RESET_SE>;
			clocks = <&bpmp_clks TEGRA194_CLK_SE>;
			clock-names = "se";
			#stream-id-cells = <1>;
			status = "okay";
		};
	}; // host1x

	clocks {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		clk32k_in: clk32k_in@0 {
			compatible = "fixed-clock";
			reg = <0>;
			#clock-cells = <0>;
			clock-frequency = <32768>;
			status = "okay";
		};
	};

	gpcdma: dma@2600000 {
		compatible = "nvidia,tegra186-gpcdma";
		reg = <0x0 0x2600000 0x0 0x210000>;
		resets = <&bpmp_resets TEGRA194_RESET_GPCDMA>;
		reset-names = "gpcdma";
		interrupts = <0 75 0x04
			0 76 0x04
			0 77 0x04
			0 78 0x04
			0 79 0x04
			0 80 0x04
			0 81 0x04
			0 82 0x04
			0 83 0x04
			0 84 0x04
			0 85 0x04
			0 86 0x04
			0 87 0x04
			0 88 0x04
			0 89 0x04
			0 90 0x04
			0 91 0x04
			0 92 0x04
			0 93 0x04
			0 94 0x04
			0 95 0x04
			0 96 0x04
			0 97 0x04
			0 98 0x04
			0 99 0x04
			0 100 0x04
			0 101 0x04
			0 102 0x04
			0 103 0x04
			0 104 0x04
			0 105 0x04
			0 106 0x04
			0 107 0x04>;
		#dma-cells = <1>;
		#stream-id-cells = <1>;
		status = "disabled";
	};

	tegra_pinctrl: pinmux: pinmux@2430000 {
		compatible = "nvidia,tegra186-pinmux";
		reg = <0x0 0x2430000 0x0 0x15000
			0x0 0xc300000 0x0 0x4000>;
		#gpio-range-cells = <3>;
		status = "disabled";
        };

	tegra_main_gpio: gpio@2200000 {
		compatible = "nvidia,tegra194-gpio";
		reg-names = "security", "gpio";
		reg =
			<0x0 0x2200000 0x0 0x10000>,
			<0x0 0x2210000 0x0 0x10000>;
		interrupts =
			<0 47 IRQ_TYPE_LEVEL_HIGH>,
			<0 50 IRQ_TYPE_LEVEL_HIGH>,
			<0 53 IRQ_TYPE_LEVEL_HIGH>,
			<0 56 IRQ_TYPE_LEVEL_HIGH>,
			<0 59 IRQ_TYPE_LEVEL_HIGH>,
			<0 180 IRQ_TYPE_LEVEL_HIGH>;
		gpio-controller;
		#gpio-cells = <2>;
		interrupt-controller;
		#interrupt-cells = <2>;
		gpio-ranges = <&tegra_pinctrl TEGRA194_MAIN_GPIO_BASE(A) TEGRA_PIN_BASE(A) TEGRA194_MAIN_GPIO_RANGE(A, Z) >;
		status = "disabled";
	};

	tegra_aon_gpio: gpio@c2f0000 {
		compatible = "nvidia,tegra194-gpio-aon";
		reg-names = "security", "gpio";
		reg = 	<0x0 0xc2f0000 0x0 0x1000>,
			<0x0 0xc2f1000 0x0 0x1000>;
		interrupts =
			<0 60 IRQ_TYPE_LEVEL_HIGH>;
		status = "disabled";
		gpio-controller;
		#gpio-cells = <2>;
		interrupt-controller;
		#interrupt-cells = <2>;
		gpio-ranges = <&tegra_pinctrl TEGRA194_AON_GPIO_BASE(AA) TEGRA_PIN_BASE(AA) TEGRA194_AON_GPIO_RANGE(AA, FF) >;
	};

	tegra_pmc: pmc@c360000 {
		compatible = "nvidia,tegra186-pmc";
		reg = <0x0 0xC360000 0x0 0x400
			0x0 0xC390000 0x0 0x2fff>;
		#padcontroller-cells = <1>;
		status = "disabled";
		io-pad-defaults { /* subnode for padctrl */
			status = "disabled";
		};
	};
	gv11b {
		compatible = "nvidia,gv11b";
		reg = <0x0 0x17000000 0x0 0x1000000
		       0x0 0x18000000 0x0 0x1000000
		       0x0 0x03b41000 0x0 0x00001000>;
		interrupts = <0 70 0x04
		              0 71 0x04>;
		interrupt-names = "stall", "nonstall";
		access-vpr-phys;
		clocks = <&bpmp_clks TEGRA194_CLK_GPCCLK>,
			<&bpmp_clks TEGRA194_CLK_GPU_PWR>;
		clock-names = "gpu", "gpu_sys";
		resets = <&bpmp_resets TEGRA194_RESET_GPU>;
	};

};
